esphome:
  name: e-paper
  on_boot:
    then:
      - logger.log: "ESPHome boot complete. Enabling display power and triggering refresh."
      - switch.turn_on: epd_power
      - delay: 1s
      - lambda: id(epaper_display).update();

external_components:
  - source: components
    components: [ crowpanel_epaper]

esp32:
  board: esp32-s3-devkitc-1

logger:
  level: DEBUG
  baud_rate: 115200
  hardware_uart: UART0

api:
  encryption:
    key: "DCBcwIRMiEP0YS6HLqw9ow4wUEiMo5I06ADQ4mTAR8s="

ota:
  - platform: esphome
    password: "c0decdc92e07bcffe58861774d04fd6a"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "E-Paper Fallback Hotspot"
    password: "806xalgPYYgs"


font:
  - file: 'fonts/OpenSans-Medium.ttf'
    id: font_small
    size: 28
    glyphs: |-
      !"%()+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz'/&|ÁÉÍÓÖŐÚÜŰáéíóöőúüű
  - file: 'fonts/OpenSans-Medium.ttf'
    id: font_medium
    size: 38
    glyphs: |-
      !"%()+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz'/&|ÁÉÍÓÖŐÚÜŰáéíóöőúüű
  - file: 'fonts/OpenSans-Bold.ttf'
    id: font_medium_bold
    size: 38
    glyphs: |-
      !"%()+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz'/&|ÁÉÍÓÖŐÚÜŰáéíóöőúüű
  - file: 'fonts/OpenSans-Medium.ttf'
    id: font_big
    size: 48
    glyphs: |-
      !"%()+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz'/&|ÁÉÍÓÖŐÚÜŰáéíóöőúüű
  - file: 'fonts/OpenSans-Bold.ttf'
    id: font_big_bold
    size: 48
    glyphs: |-
      !"%()+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz'/&|ÁÉÍÓÖŐÚÜŰáéíóöőúüű
  - file: 'fonts/OpenSans-Medium.ttf'
    id: font_large
    size: 56
    glyphs: |-
      !"%()+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz'/&|ÁÉÍÓÖŐÚÜŰáéíóöőúüű
  - file: 'fonts/OpenSans-Bold.ttf'
    id: font_large_bold
    size: 56
    glyphs: |-
      !"%()+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz'/&|ÁÉÍÓÖŐÚÜŰáéíóöőúüű
  - file: 'fonts/OpenSans-Bold.ttf'
    id: font_xlarge_bold
    size: 72
    glyphs: |-
      !"%()+=,-_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz'/&|ÁÉÍÓÖŐÚÜŰáéíóöőúüű
  # material UI icons - from https://pictogrammers.github.io/@mdi/font/5.3.45/
  - file: 'fonts/materialdesignicons-webfont.ttf'
    id: font_icons
    size: 50
    glyphs:
      - "\U000F0594" # clear-night
      - "\U000F0590" # cloudy
      - "\U000F0591" # fog
      - "\U000F0592" # hail
      - "\U000F0593" # lightning
      - "\U000F067E" # lightning-rainy
      - "\U000F0F31" # night-partly-cloudy
      - "\U000F0595" # partly-cloudy
      - "\U000F0596" # pouring
      - "\U000F0597" # rainy
      - "\U000F0F36" # snowy
      - "\U000F067F" # snowy-rainy
      - "\U000F0599" # sunny
      - "\U000F059D" # windy
      - "\U000F059E" # windy-variant
      - "\U000F0F38" # exCentereptional
      - "\U000F02DC" # Casa
      - "\U000F0F9B" # Fora
      - "\U000F058E" # Humi
  - file: 'fonts/materialdesignicons-webfont.ttf'
    id: font_icons_small
    size: 50
    glyphs:
      # weather
      - "\U000F0594" # clear-night
      - "\U000F0590" # cloudy
      - "\U000F0591" # fog
      - "\U000F0592" # hail
      - "\U000F0593" # lightning
      - "\U000F067E" # lightning-rainy
      - "\U000F0F31" # night-partly-cloudy
      - "\U000F0595" # partly-cloudy
      - "\U000F0596" # pouring
      - "\U000F0597" # rainy
      - "\U000F0F36" # snowy
      - "\U000F067F" # snowy-rainy
      - "\U000F0599" # sunny
      - "\U000F059D" # windy
      - "\U000F059E" # windy-variant
      - "\U000F0F38" # exceptional
      # moon phases
      - "\U000F0F61" # moon-first-quarter
      - "\U000F0F62" # moon-full
      - "\U000F0F63" # moon-last-quarter
      - "\U000F0F64" # moon-new
      - "\U000F0F65" # moon-waning-crescent
      - "\U000F0F66" # moon-waning-gibbous
      - "\U000F0F67" # moon-waxing-crescent
      - "\U000F0F68" # moon-waxing-gibbous
      # other icons
      - "\U000F10C2" # Temperature High
      - "\U000F10C3" # Temperature Low
      - "\U000F054B" # umbrella
      - "\U000F02E3" # Bed
      - "\U000F064D" # human-male
      - "\U000F0649" # human-female
      - "\U000F04B9" # sofa
      - "\U000F04DB" # stop
      - "\U000F040A" # play
      - "\U000F03E4" # pause
      - "\U000F0643" # man
      - "\U000F1078" # woman
      - "\U000F0E7C" # baby-face
      - "\U000F0379" # monitor
      - "\U000F07E4" # CO2
      
      
  - file: 'fonts/materialdesignicons-webfont.ttf'
    id: font_icons_tiny
    size: 32
    glyphs:
      - "\U000F005E" # arrow-up-thick
      - "\U000F0046" # arrow-down-thick
      - "\U000F059C" # Sunrise
      - "\U000F059B" # Sunset


display:
  - platform: crowpanel_epaper
    clk_pin: 12
    mosi_pin: 11
    id: epaper_display
    model: 4.20in 
    cs_pin: 45
    dc_pin: 46
    reset_pin: 47
    busy_pin: 48
    update_interval: 10s
    full_update_every: 60
    rotation: 180
    lambda: |-
    
      // icon constants
      #define ICON_temp_high        "\U000F10C2"
      #define ICON_temp_low         "\U000F10C3"
      #define ICON_umbrella         "\U000F054B"
      #define ICON_bed              "\U000F02E3"
      #define ICON_human_male       "\U000F064D"
      #define ICON_human_female     "\U000F0649"
      #define ICON_monitor          "\U000F0379"
      #define ICON_sofa             "\U000F04B9"
      #define ICON_man              "\U000F0643"
      #define ICON_woman            "\U000F1078"
      #define ICON_baby             "\U000F0E7C"
      #define ICON_up               "\U000F005E"
      #define ICON_down             "\U000F0046"
      #define ICON_sunrise          "\U000F059C"
      #define ICON_sunset           "\U000F059B"
      #define ICON_Casa             "\U000F02DC"
      #define ICON_Fora             "\U000F0F9B"
      #define ICON_Humidade         "\U000F058E"
      #define ICON_CO2              "\U000F07E4"
      
      #define ICON_clear_night      "\U000F0594" 
      #define ICON_cloudy           "\U000F0590" 
      #define ICON_fog              "\U000F0591" 
      #define ICON_hail             "\U000F0592" 
      #define ICON_lightning        "\U000F0593" 
      #define ICON_lightning_rainy  "\U000F067E" 
      #define ICON_night_partly_cloudy "\U000F0F31" 
      #define ICON_partly_cloudy    "\U000F0595" 
      #define ICON_pouring          "\U000F0596" 
      #define ICON_rainy            "\U000F0597" 
      #define ICON_snowy            "\U000F0F36" 
      #define ICON_snowy_rainy      "\U000F067F" 
      #define ICON_sunny            "\U000F0599" 
      #define ICON_windy            "\U000F059D" 
      #define ICON_windy_variant    "\U000F059E" 
      #define ICON_exceptional      "\U000F0F38" 
      
      int Alin_x_1 = 30;
      int Alin_x_2 = Alin_x_1+70;
      int Alin_x_3 = Alin_x_2+70;
      int Alin_x_4 = Alin_x_3+70;
      
      int Alin_y_1 = 22;
      int Alin_y_2 = Alin_y_1+45;
      int Alin_y_3 = Alin_y_2+45;
      int Alin_y_4 = Alin_y_3+45;
      
      it.rectangle(0, 0, it.get_width(), it.get_height()-1);
      
      auto time = id(esptime).now();
      it.strftime(it.get_width(), 0, id(font_medium), TextAlign::RIGHT, "%H:%M", time);
      
      
      it.printf(Alin_x_2, Alin_y_1, id(font_icons), TextAlign::CENTER, ICON_Casa); 
      it.printf(Alin_x_3, Alin_y_1, id(font_icons), TextAlign::CENTER, ICON_Fora); 
      
      it.printf(Alin_x_1, Alin_y_2, id(font_icons_small), TextAlign::CENTER, ICON_temp_high); 
      it.printf(Alin_x_2, Alin_y_2, id(font_small), TextAlign::CENTER, "%.1f", id(temperatureEA).state);// °C
      it.printf(Alin_x_3, Alin_y_2, id(font_small), TextAlign::CENTER, "%.1f", id(TempFora).state);
      
      it.printf(Alin_x_1, Alin_y_3, id(font_icons), TextAlign::CENTER, ICON_Humidade); 
      it.printf(Alin_x_2, Alin_y_3, id(font_small), TextAlign::CENTER, "%.0f", id(UmidadeEA).state);// °C
      it.printf(Alin_x_3, Alin_y_3, id(font_small), TextAlign::CENTER, "%.0f", id(UmiFora).state);
      
      it.printf(Alin_x_1, Alin_y_4, id(font_icons_small), TextAlign::CENTER, ICON_CO2); 
      it.printf(Alin_x_2, Alin_y_4, id(font_small), TextAlign::CENTER, "%.0f", id(co2_ea).state);// °C
      it.printf(Alin_x_3, Alin_y_4, id(font_small), TextAlign::CENTER, "%.0f", 0);
      
      
      
      auto ICON_Tempo = "";
      auto weather_state_cstr = forecast_home->state.c_str();
      
      if (strcmp(weather_state_cstr, "clear-night") == 0) {
          ICON_Tempo = ICON_clear_night;
      } else if (strcmp(weather_state_cstr, "cloudy") == 0) {
          ICON_Tempo = ICON_cloudy;
      } else if (strcmp(weather_state_cstr, "fog") == 0) {
          ICON_Tempo = ICON_fog;
      } else if (strcmp(weather_state_cstr, "hail") == 0) {
          ICON_Tempo = ICON_hail;
      } else if (strcmp(weather_state_cstr, "lightning") == 0) {
          ICON_Tempo = ICON_lightning;
      } else if (strcmp(weather_state_cstr, "lightning-rainy") == 0) {
          ICON_Tempo = ICON_lightning_rainy;
      } else if (strcmp(weather_state_cstr, "partlycloudy") == 0) { 
          ICON_Tempo = ICON_partly_cloudy;
      } else if (strcmp(weather_state_cstr, "pouring") == 0) {
          ICON_Tempo = ICON_pouring;
      } else if (strcmp(weather_state_cstr, "rainy") == 0) {
          ICON_Tempo = ICON_rainy;
      } else if (strcmp(weather_state_cstr, "snowy") == 0) {
          ICON_Tempo = ICON_snowy;
      } else if (strcmp(weather_state_cstr, "snowy-rainy") == 0) {
          ICON_Tempo = ICON_snowy_rainy;
      } else if (strcmp(weather_state_cstr, "sunny") == 0) {
          ICON_Tempo = ICON_sunny;
      } else if (strcmp(weather_state_cstr, "windy") == 0) {
          ICON_Tempo = ICON_windy;
      } else if (strcmp(weather_state_cstr, "windy-variant") == 0) {
          ICON_Tempo = ICON_windy_variant;
      } else if (strcmp(weather_state_cstr, "exceptional") == 0) {
          ICON_Tempo = ICON_exceptional;
      } else {
          ESP_LOGW("clima", "Condição climática desconhecida: %s", weather_state_cstr);
      }
      it.printf(Alin_x_4, Alin_y_1, id(font_icons_small), TextAlign::CENTER, ICON_Tempo); 
      
     

globals:
  - id: g_pm1_0
    type: int
    
binary_sensor:
  - platform: status
    id: wifi_connected_status
    name: "WiFi Connection Status"

time:
  - platform: sntp
    id: esptime
    timezone: "BRT3BRST,M10.3.0/0,M2.3.0/0"
    servers: south-america.pool.ntp.org               

switch:
  - platform: gpio
    pin: 7
    id: epd_power
    name: "EPD Power"
    restore_mode: ALWAYS_ON

    
sensor:
  # weather
  - platform: homeassistant
    name: "estacao_do_ar_temperatura_ea"
    entity_id: sensor.estacao_do_ar_temperatura_ea
    id: temperatureEA
    
  - platform: homeassistant
    name: "TempFora"
    entity_id: sensor.tz3000_1twfmkcc_ts0201_temperatura
    id: TempFora
    
  - platform: homeassistant
    name: "estacao_do_ar_umidade_ea"
    entity_id: sensor.estacao_do_ar_umidade_ea
    id: UmidadeEA
    
  - platform: homeassistant
    name: "UmiFora"
    entity_id: sensor.tz3000_1twfmkcc_ts0201_umidade
    id: UmiFora
    
  - platform: homeassistant
    name: "estacao_do_ar_temperatura_ea"
    entity_id: sensor.estacao_do_ar_co2_ea
    id: co2_ea
    

text_sensor:
  - platform: homeassistant
    name: "forecast_home"
    entity_id: weather.forecast_home
    internal: true # Torna o sensor interno se você não quiser que ele apareça no Home Assistant novamente
    id: forecast_home
    
    
    
interval:
  - interval: 10s
    then: 
      - lambda: |
            ESP_LOGI("log", "temperatureEA: %f", id(temperatureEA).state);
            ESP_LOGI("log", "TempFora: %f", id(TempFora).state);
            ESP_LOGI("log", "UmidadeEA: %f", id(UmidadeEA).state);
            ESP_LOGI("log", "UmiFora: %f", id(UmiFora).state);
            ESP_LOGI("log", "co2_ea: %f", id(co2_ea).state);
            ESP_LOGI("log", "Previsão do tempo: %s", forecast_home->state.c_str());
 